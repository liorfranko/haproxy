version: "3.7"
services:
    haproxy:
        build:
            context: haproxy/
        ports:
            - 80:80
        volumes:
            - /Users/liorf/PycharmProjects/haproxy/haproxy/config:/config/
    elasticsearch:
        ports:
            - 9200:9200
            - 9300:9300
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
        environment:
            - discovery.type=single-node
    kibana:
        ports:
            - 5601:5601
        image: docker.elastic.co/kibana/kibana:7.9.2
    logstash:
        image: docker.elastic.co/logstash/logstash:7.9.3
        volumes: 
            - /Users/liorf/PycharmProjects/haproxy/logstash/pipeline:/usr/share/logstash/pipeline/
    web:
        build:
            context: node/
    registrator:
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock
        image:
            gliderlabs/registrator:latest
        command: -internal=true consul://192.168.1.111:8500
    zookeeper:
        image: wurstmeister/zookeeper
        ports:
            - "2181:2181"
    kafka1:
        build: kafka_new/
        ports:
            - "9192:9092"
        environment:
            KAFKA_ADVERTISED_HOST_NAME: 192.168.1.111
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
    kafka_manager:
        image: hlebalbau/kafka-manager:stable
        ports:
        - "9000:9000"
        environment:
            ZK_HOSTS: "zookeeper:2181"